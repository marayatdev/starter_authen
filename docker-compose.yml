# docker-compose.yml
version: '3'
services:
  # nginx:
  #   image: nginx:latest
  #   ports:
  #     - "80:80"  # เปิดพอร์ต 80 สำหรับการเข้าถึงจากภายนอก
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf  # กำหนดไฟล์ config ของ Nginx
  #   depends_on:
  #     - client
  #     - server

  # client:
  #   build:
  #     context: ./client
  #     dockerfile: Dockerfile
  #   environment:
  #     - REACT_APP_API_URL=http://localhost/api  # URL ของ API สำหรับ client
  #   expose:
  #     - "3000"  # เปิดพอร์ตสำหรับภายใน network

  # server:
  #   build:
  #     context: ./server
  #     dockerfile: Dockerfile
  #   environment:
  #     - DATABASE_HOST=db
  #     - DATABASE_USER=root
  #     - DATABASE_PASSWORD=example
  #     - DATABASE_NAME=myapp
  #   expose:
  #     - "5000"  # เปิดพอร์ตสำหรับภายใน network
  #   depends_on:
  #     - db

  mysql_db:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password # เปลี่ยนเป็นรหัสผ่านของ root ที่ปลอดภัย
      MYSQL_DATABASE: server # เปลี่ยนเป็นชื่อฐานข้อมูลที่ต้องการ
      MYSQL_USER: user # เปลี่ยนเป็นชื่อผู้ใช้ที่ต้องการ
      MYSQL_PASSWORD: root # เปลี่ยนเป็นรหัสผ่านผู้ใช้ที่ปลอดภัย
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - my_network

volumes:
  mysql_data:

networks:
  my_network:
